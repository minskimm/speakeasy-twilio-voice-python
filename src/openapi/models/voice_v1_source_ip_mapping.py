"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from openapi.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing_extensions import NotRequired, TypedDict


class VoiceV1SourceIPMappingTypedDict(TypedDict):
    sid: NotRequired[Nullable[str]]
    r"""The unique string that we created to identify the IP Record resource."""
    ip_record_sid: NotRequired[Nullable[str]]
    r"""The Twilio-provided string that uniquely identifies the IP Record resource to map from."""
    sip_domain_sid: NotRequired[Nullable[str]]
    r"""The SID of the SIP Domain that the IP Record is mapped to."""
    date_created: NotRequired[Nullable[datetime]]
    r"""The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format."""
    date_updated: NotRequired[Nullable[datetime]]
    r"""The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format."""
    url: NotRequired[Nullable[str]]
    r"""The absolute URL of the resource."""


class VoiceV1SourceIPMapping(BaseModel):
    sid: OptionalNullable[str] = UNSET
    r"""The unique string that we created to identify the IP Record resource."""

    ip_record_sid: OptionalNullable[str] = UNSET
    r"""The Twilio-provided string that uniquely identifies the IP Record resource to map from."""

    sip_domain_sid: OptionalNullable[str] = UNSET
    r"""The SID of the SIP Domain that the IP Record is mapped to."""

    date_created: OptionalNullable[datetime] = UNSET
    r"""The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format."""

    date_updated: OptionalNullable[datetime] = UNSET
    r"""The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format."""

    url: OptionalNullable[str] = UNSET
    r"""The absolute URL of the resource."""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "sid",
            "ip_record_sid",
            "sip_domain_sid",
            "date_created",
            "date_updated",
            "url",
        ]
        nullable_fields = [
            "sid",
            "ip_record_sid",
            "sip_domain_sid",
            "date_created",
            "date_updated",
            "url",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
